source "%val{config}/bundle/kak-bundle/rc/kak-bundle.kak"
bundle kakoune-surround https://github.com/h-youhei/kakoune-surround %{}

bundle auto-pairs https://github.com/alexherbo2/auto-pairs.kak %{
  enable-auto-pairs
}
bundle harpoon https://github.com/raiguard/kak-harpoon %{
  harpoon-add-bindings
}

bundle-install-hook kakship %{
  cargo install --force --path .
	[ ! -e $kak_config/starship.toml ] && cp starship.toml $kak_config/
}

bundle kakship https://github.com/eburghar/kakship %{
	kakship-enable
}

bundle-install-hook kak-popup  %{
	cargo install --force --path .
}

bundle kak-popup https://github.com/enricozb/popup.kak %{
  eval %sh{kak-popup init}
}

bundle smarttab https://github.com/andreyorst/smarttab.kak %{
    hook global WinSetOption filetype=(rust|markdown|kak|typescript|javascript|css|html) smarttab
    hook global WinSetOption filetype=(haskell) expandtab
}
# TreeSitter
eval %sh{ kak-tree-sitter -dks -vvvv --init $kak_session  }
colorscheme solarized-dark

hook global BufCreate .*\.templ %{
	set-option buffer filetype templ
}

hook global BufCreate .*/?.+\.yuck %{
  set-option buffer filetype yuck
}

hook global BufCreate .*/?.+\.c3 %{
  set-option buffer filetype c3
}
# LSP
eval %sh{ kak-lsp --kakoune -s $kak_session }
hook global WinSetOption filetype=(haskell|rust|html|css|go|javascript|typescript|purescript|c|cpp|nix|zig|c3|odin) %{
    lsp-enable-window
}
hook global BufSetOption filetype=(rust|go|html|css|typescript|javascript|zig|nix) %{
    hook buffer BufWritePre .* lsp-formatting-sync
}
hook global BufSetOption filetype=nix %{
  set-option buffer lsp_servers %{
    [nixd]
    root_globs = [ "flake.nix", "shell.nix", ".git", ".hg" ]
    [nixd.settings.nixd]
    formatting.command = [ "alejandra" ]
    options.home-manager.expr = "(builtins.getFlake \"/home/savvy/.config/nixos\").homeConfigurations.savvy.options"
    options.nixos.expr = "(builtins.getFlake \"/home/savvy/.config/nixos\").nixosConfigurations.savvy.options"
  }
}

define-command pwd %{
	change-directory %sh{dirname $kak_buffile}
}

hook global BufSetOption filetype=odin %{
  set-option buffer lsp_servers %{
    [ols]
    root_globs = [ "main.odin", "odin.bin"]
  }
}

hook global BufSetOption filetype=c3 %{
  set-option buffer lsp_servers %{
    [c3lsp]
    root_globs = [ "project.json" ]
  }
}

#Highlighters
lsp-inlay-diagnostics-enable global
addhl global/ number-lines -relative
set-option global tabstop 2
set-option global indentwidth 2
set-option global autoreload yes

# Copy and paste
map global user y '<a-|>wl-copy<ret>' -docstring "Copy clipboard"
map global user p '!wl-paste<ret>' -docstring "Paste clipboard"

# Mappings
map global insert <tab> '<a-;>:try lsp-snippets-select-next-placeholders catch %{ execute-keys -with-hooks <lt>tab> }<ret>' -docstring 'Select next snippet placeholder'
map global user f ': popup --title open --kak-script %{edit %opt{popup_output}} -- fzf <ret>' -docstring "Fuzzy finder"
map global user d ': lsp-diagnostics<ret>' -docstring 'LSP diagnostics'
map global user a ': lsp-code-actions<ret>' -docstring 'LSP actions'
map global user k ': lsp-hover<ret>' -docstring 'LSP info'
map global user c ': comment-line<ret>' -docstring 'Comment lines'
map global user "#" ': pwd<ret>' -docstring 'Change PWD to buffer dir'

# Surround
map global user s ':surround<ret>' -docstring 'surround'
map global user r ':change-surround<ret>' -docstring 'change'
